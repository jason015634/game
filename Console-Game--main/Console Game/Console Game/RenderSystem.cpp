//#pragma once
//#include <windows.h>
//#include <iostream>
//#include "InputSystem.h"
//#include "RenderSystem.h"
//
//enum {
//    black,
//    blue,
//    green,
//    cyan,
//    red,
//    purple,
//    brown,
//    lightgray,
//    darkgray,
//    lightblue,
//    lightgreen,
//    lightcyan,
//    lightred,
//    lightpurple,
//    yellow,
//    white
//};
//
//void Lobby()
//{
//    printf("\n\n\n\n");
//    printf("       $$$$$$      $$      $$   $$   $$    $$          $$$$$$    $$$$$$   $$$$$$      $$      $$    $$\n");
//    printf("       $$   $$    $$$$     $$$  $$   $$  $$            $$   $$   $$  $$   $$         $$$$     $$  $$  \n");
//    printf("       $$$$$     $$  $$    $$ $ $$   $$$$              $$$$$     $$$$     $$$$$     $$  $$    $$$$    \n");
//    printf("       $$   $$  $$$$$$$$   $$  $$$   $$  $$            $$   $$   $$  $$   $$       $$$$$$$$   $$  $$  \n");
//    printf("       $$$$$$  $$      $$  $$   $$   $$    $$          $$$$$$    $$   $$  $$$$$$  $$      $$  $$    $$\n");
//}
//
//void setColor(int forground, int background)
//{
//    HANDLE consoleHandle = GetStdHandle(STD_OUTPUT_HANDLE);
//    int code = forground + background * 16;
//    SetConsoleTextAttribute(consoleHandle, code);
//}
//
//void GotoXY(int x, int y)
//{
//    COORD Cur = { x, y };
//    Cur.X = x;
//    Cur.Y = y;
//    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Cur);
//}
//
//void StartGame()
//{
//    // 깜박이는 커서를 좀 진정 시키자.
//    CONSOLE_CURSOR_INFO cursorInfo = { 0, };
//    cursorInfo.bVisible = 0; // 커서를 보일지 말지 결정(0이면 안보임, 0제외 숫자 값이면 보임)
//    cursorInfo.dwSize = 1; // 커서의 크기를 결정 (1~100 사이만 가능)
//    SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &cursorInfo);
//
//    // 콘솔창 크기를 가져 오고
//    CONSOLE_SCREEN_BUFFER_INFO csbi;
//    GetConsoleScreenBufferInfo(GetStdHandle(STD_OUTPUT_HANDLE), &csbi);
//
//    //global::consoleScreenSize.Left = csbi.srWindow.Left;
//    //global::consoleScreenSize.Right = csbi.srWindow.Right;
//    //global::consoleScreenSize.Bottom = csbi.srWindow.Bottom;
//    //global::consoleScreenSize.Top = csbi.srWindow.Top;
//
//    //// 플레이어 시작 위치 설정
//    //global::prePlayerPos.X = 1;
//    //global::prePlayerPos.Y = 2;
//    //global::curPlayerPos.X = 1;
//    //global::curPlayerPos.Y = 2;
//
//
//}
//
//int menuDraw()
//{
//    int x = 45;
//    int y = 12;
//    GotoXY(x - 2, y);
//    printf("> 탈 출 시 작 :)");
//    GotoXY(x - 2, y + 1);
//    printf("    포  기 :(   ");
//
//    while (1)
//    {
//        int n = global::input::keyControl();
//        switch (n)
//        {
//        case global::input::UP_KEY_INDEX:
//        {
//            if (y > 12)
//            {
//                GotoXY(x - 2, y);
//                printf(" ");
//                GotoXY(x - 2, --y);
//                printf(">");
//            }
//            break;
//        }
//        case global::input::DOWN_KEY_INDEX:
//        {
//            if (y < 13)
//            {
//                GotoXY(x - 2, y);
//                printf(" ");
//                GotoXY(x - 2, ++y);
//                printf(">");
//            }
//            break;
//        }
//
//        case global::input::SUBMIT:
//        {
//            return y - 12;
//        }
//        }
//
//    }
//
//}
//
//char tempMaze[41][63];
//
//char b_Maze[41][63] = // width=50, height=20
//{
//    {"1111111111111111111111111111111111111111111111111111111111111"},
//    {"1000001000000000000000001100001000000000011000000000000000001"},
//    {"1011101011111101101101111101111111111101011111101111111111101"},
//    {"1s11101211100001101100000000001000000001011000000001011400001"},
//    {"1111101111101111101001011111111111111111011111101111011111111"},
//    {"1000000000001000001001011101000031000000000000001000000000001"},
//    {"1111111111111111111111011101011111111111011111111111111011111"},
//    {"1000011000001000000001000001011100001101000000000000000000001"},
//    {"1111011111101111111101111101011101101101011111111101101011111"},
//    {"1000011000000000000001000000000001100001000011001001101000001"},
//    {"1011111111011101111101001011111111101111011011011111101111111"},
//    {"1000001000011001001100001000001000000000011000000001001100001"},
//    {"1011111111011111001001011111111111111111011011101111111101101"},
//    {"1011001601000000001001000001000000000000011001100000000001101"},
//    {"1011101101111101111111101101111111111111011111001111011111101"},
//    {"1000000001000001000000001001000000000000011001001000000011101"},
//    {"1111011111111101111111111111111101111011111101111111011011101"},
//    {"1000000001000000000111111000000000001001000001001000011001001"},
//    {"1011111111011111111111111111011111111111111101001111011111111"},
//    {"1000001000001000001700000000001000001001000001011001000000001"},
//    {"1011101011111111011111111011111001101001111101011011111111101"},
//    {"1011001001000000000001100000001@01100000000000001000000001101"},
//    {"1011111111001111111101101111111111101111111111111011111101101"},
//    {"1000000001001001000000001111001000000000011001000000001000001"},
//    {"1011101111111001111101111111001111101111011101111011001111101"},
//    {"1011100000000001000001000000000000001111000000001011001081101"},
//    {"1011111111101111011111111111111011111001111101111001111011101"},
//    {"1000001000001001000001000000001000001001001001001001001000001"},
//    {"1011101111101001111101111011111011111101001001001111001111111"},
//    {"1011100001100000000000000000000011100001000000000000000000001"},
//    {"1011111111101101011111001011111001101111011111001111111101111"},
//    {"1001110000001101000001001000001000000001000001001111000001001"},
//    {"1111111111111101111111111111111111101111111111111111011111001"},
//    {"1000011000001000000001000000001000001!01000001000000000000001"},
//    {"1111011111101011101101011111111111101001001111111011111101111"},
//    {"1000000000000011001111000000000001100001000001001000001100001"},
//    {"1011111111111111001081111111011111101111001111001001111111101"},
//    {"1000051000000000000001000000000011101001000000001000001000001"},
//    {"1011111011111101111111111011111011101001011111101111111011101"},
//    {"10000010000011000011000000000010000000000000011000000010111?1"},
//    {"1111111111111111111111111111111111111111111111111111111111111"}
//};
//
//void drawMap(int* x, int* y)
//{
//    system("cls");
//    DWORD dw;
//    int h, w;
//    for (h = 0; h < 41; h++)
//    {
//        for (int w = 0; w < 63; w++)
//        {
//            char temp = tempMaze[h][w];
//            SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), (7) | 0 << 4);
//
//            //if(isPlayerSight(w,h,*x,*y))
//            {
//                if (temp == '0')
//                {
//                    setColor(black, black);
//                    printf("  ");
//                }
//                else if (temp == '1')
//                {
//                    /*SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), (7) << 4);
//                    WriteConsoleA(GetStdHandle(STD_OUTPUT_HANDLE), "  ", 2, &dw, NULL);*/
//                    setColor(white, black);
//                    printf("■");
//                }
//                else if (temp == '2' || temp == '3' || temp == '4' || temp == '5' || temp == '6' || temp == '7' || temp == '8' || temp == '9' || temp == '!' || temp == '@')
//                {
//                    setColor(lightred, black);
//                    printf("▣");
//                }
//                else if (temp == '?')
//                {
//                    setColor(lightgreen, black);
//                    printf("▥");
//                }
//                else if (temp == 's')
//                {
//                    *x = w;
//                    *y = h;
//                    setColor(lightblue, black);
//                    printf("♀");
//                }
//            }
//            /*else
//            {
//                setColor(black, black);
//                printf("11");
//            }*/
//        }
//        printf("\n");
//
//    }
//
//}
//
//void drawUI(int* x, int* y, int* vault)
//{
//    setColor(white, black);
//    GotoXY(3, 42);
//    printf("위치 : %02d, %02d", *x, *y);
//
//    setColor(green, black);
//    GotoXY(34, 42);
//    printf("Money : $%d", *vault);
//}